{
    "template": {
        "prefix": "template",
        "body": [
            "<template>",
            "\t<${1:view}$2>",
            "\t\t$0",
            "\t</${1:view}>",
            "</template>"
        ],
        "description": "template element"
    },
    "wx:if": {
        "prefix": "wxIf",
        "body": [
            "wx:if=\"{{${1:condition}}}\""
        ],
        "description": "Expects: any"
    },
    "wx:else": {
        "prefix": "wxElse",
        "body": [
            "wx:else"
        ],
        "description": "Does not expect expression. previous sibling element must have v-if or v-else-if."
    },
    "wx:elif": {
        "prefix": "wxElseIf",
        "body": [
            "wx:elif=\"{{${1:condition}}}\""
        ],
        "description": "Expects: any. previous sibling element must have v-if or v-else-if."
    },
    "wx:for": {
        "prefix": "wxFor",
        "body": [
            "wx:for=\"{{${1:items}}}\" wx:key=\"${2:index}\""
        ],
        "description": "Expects: Array | Object | number | string"
    },
    "wx:model": {
        "prefix": "wxModel",
        "body": [
            "wx:model=\"{{${1:something}}}\""
        ],
        "description": "Expects: varies based on value of form inputs element or output of components"
    },
    "wx:key": {
        "prefix": "wxKey",
        "body": [
            "wx:key=\"${1:key}\""
        ],
        "description": "Expects: string. Children of the same common parent must have unique keys. Duplicate keys will cause render errors."
    },
    "wx:ref": {
        "prefix": "wxRef",
        "body": [
            "wx:ref=\"{{${1:reference}}}\"$0"
        ],
        "description": "Expects: string. ref is used to register a reference to an element or a child component. The reference will be registered under the parent component’s $refs object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance."
    },
    "slotA": {
        "prefix": "slotA",
        "body": [
            "slot=\"$1\"$0"
        ],
        "description": "slot=''. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to."
    },
    "slotE": {
        "prefix": "slotE",
        "body": [
            "<slot$1>$2</slot>$0"
        ],
        "description": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to."
    },
    "slotScope": {
        "prefix": "slotScope",
        "body": [
            "slot-scope=\"$1\"$0"
        ],
        "description": "Used to denote an element or component as a scoped slot. The attribute’s value should be a valid JavaScript expression that can appear in the argument position of a function signature. This means in supported environments you can also use ES2015 destructuring in the expression. Serves as a replacement for scope in 2.5.0+."
    },
    "scope": {
        "prefix": "scope",
        "body": [
            "scope=\"${1:this api replaced by slot-scope in 2.5.0+}\"$0"
        ],
        "description": "Used to denote a <template> element as a scoped slot, which is replaced by `slot-scope` in 2.5.0+."
    },
    "component": {
        "prefix": "component",
        "body": [
            "<component :is=\"${1:componentId}\"></component>$0"
        ],
        "description": "component element"
    },
    "wx:class": {
        "prefix": "wxClass",
        "body": [
            "wx:class=\"{{${1:something}}}\""
        ],
        "description": "Expects: any"
    },
    "wx:style": {
        "prefix": "wxStyle",
        "body": [
            "wx:style=\"{{${1:something}}}\""
        ],
        "description": "Expects: any"
    },
    "bindtap": {
        "prefix": "bindtap",
        "body": [
            "bindtap=\"$1\"$0"
        ],
        "description": "bindtap=''"
    },
    "cover-image": {
        "prefix": "coverImage",
        "body": [
            "<cover-image>$1</cover-image>$0"
        ],
        "description": "cover-image element"
    },
    "cover-view": {
        "prefix": "coverView",
        "body": [
            "<cover-view>$1</cover-view>$0"
        ],
        "description": "cover-view element"
    },
    "match-media": {
        "prefix": "matchMedia",
        "body": [
            "<match-media>$1</match-media>$0"
        ],
        "description": "match-media element"
    },
    "movable-area": {
        "prefix": "movableArea",
        "body": [
            "<movable-area>$1</movable-area>$0"
        ],
        "description": "movable-area element"
    },
    "movable-view": {
        "prefix": "movableArea",
        "body": [
            "<movable-view>$1</movable-view>$0"
        ],
        "description": "movable-view element"
    },
    "scroll-view": {
        "prefix": "scrollView",
        "body": [
            "<scroll-view>$1</scroll-view>$0"
        ],
        "description": "scroll-view element"
    },
    "swiper": {
        "prefix": "swiper",
        "body": [
            "<swiper>$1</swiper>$0"
        ],
        "description": "swiper element"
    },
    "swiper-item": {
        "prefix": "swiperItem",
        "body": [
            "<swiper-item>$1</swiper-item>$0"
        ],
        "description": "swiper-item element"
    },
    "view": {
        "prefix": "view",
        "body": [
            "<view>$1</view>$0"
        ],
        "description": "view element"
    },
    "icon": {
        "prefix": "icon",
        "body": [
            "<icon>$1</icon>$0"
        ],
        "description": "icon element"
    },
    "progress": {
        "prefix": "progress",
        "body": [
            "<progress>$1</progress>$0"
        ],
        "description": "progress element"
    },
    "rich-text": {
        "prefix": "rich-text",
        "body": [
            "<rich-text>$1</rich-text>$0"
        ],
        "description": "rich-text element"
    },
    "text": {
        "prefix": "text",
        "body": [
            "<text>$1</text>$0"
        ],
        "description": "text element"
    },
    "checkbox": {
        "prefix": "checkbox",
        "body": [
            "<checkbox>$1</checkbox>$0"
        ],
        "description": "checkbox element"
    },
    "checkbox-group": {
        "prefix": "checkbox-group",
        "body": [
            "<checkbox-group>$1</checkbox-group>$0"
        ],
        "description": "checkbox-group element"
    },
    "editor": {
        "prefix": "editor",
        "body": [
            "<editor>$1</editor>$0"
        ],
        "description": "editor element"
    },
    "picker": {
        "prefix": "picker",
        "body": [
            "<picker>$1</picker>$0"
        ],
        "description": "picker element"
    },
    "picker-view": {
        "prefix": "pickerView",
        "body": [
            "<picker-view>$1</picker-view>$0"
        ],
        "description": "picker-view element"
    },
    "picker-view-column": {
        "prefix": "pickerViewColumn",
        "body": [
            "<picker-view-column>$1</picker-view-column>$0"
        ],
        "description": "picker-view-column element"
    },
    "radio": {
        "prefix": "radio",
        "body": [
            "<radio>$1</radio>$0"
        ],
        "description": "radio element"
    },
    "radio-group": {
        "prefix": "radioGroup",
        "body": [
            "<radio-group>$1</radio-group>$0"
        ],
        "description": "radio-group element"
    },
    "slider": {
        "prefix": "slider",
        "body": [
            "<slider>$1</slider>$0"
        ],
        "description": "slider element"
    },
    "switch": {
        "prefix": "switch",
        "body": [
            "<switch>$1</switch>$0"
        ],
        "description": "switch element"
    },
    "functional-page-navigator": {
        "prefix": "functionalPageNavigator",
        "body": [
            "<functional-page-navigator>$1</functional-page-navigator>$0"
        ],
        "description": "functional-page-navigator element"
    },
    "navigator": {
        "prefix": "navigator",
        "body": [
            "<navigator>$1</navigator>$0"
        ],
        "description": "navigator element"
    },
    "camera": {
        "prefix": "camera",
        "body": [
            "<camera>$1</camera>$0"
        ],
        "description": "camera element"
    },
    "image": {
        "prefix": "image",
        "body": [
            "<image>$1</image>$0"
        ],
        "description": "image element"
    },
    "live-player": {
        "prefix": "livePlayer",
        "body": [
            "<live-player>$1</live-player>$0"
        ],
        "description": "live-player element"
    },
    "live-pusher": {
        "prefix": "livePusher",
        "body": [
            "<live-pusher>$1</live-pusher>$0"
        ],
        "description": "live-pusher element"
    },
    "voip-room": {
        "prefix": "voipRoom",
        "body": [
            "<voip-room>$1</voip-room>$0"
        ],
        "description": "voip-room element"
    },
    "map": {
        "prefix": "map",
        "body": [
            "<map>$1</map>$0"
        ],
        "description": "map element"
    },
    "ad": {
        "prefix": "ad",
        "body": [
            "<ad>$1</ad>$0"
        ],
        "description": "ad element"
    },
    "official-account": {
        "prefix": "official-account",
        "body": [
            "<official-account>$1</official-account>$0"
        ],
        "description": "official-account element"
    },
    "open-data": {
        "prefix": "openData",
        "body": [
            "<open-data>$1</open-data>$0"
        ],
        "description": "open-data element"
    },
    "web-view": {
        "prefix": "webView",
        "body": [
            "<web-view>$1</web-view>$0"
        ],
        "description": "web-view element"
    },
    "native-component": {
        "prefix": "nativeComponent",
        "body": [
            "<native-component>$1</native-component>$0"
        ],
        "description": "native-component element"
    },
    "aria-component": {
        "prefix": "aria-component",
        "body": [
            "<aria-component>$1</aria-component>$0"
        ],
        "description": "aria-component element"
    },
    "navigation-bar": {
        "prefix": "navigationBar",
        "body": [
            "<navigation-bar>$1</navigation-bar>$0"
        ],
        "description": "ad element"
    },
    "page-meta": {
        "prefix": "page-meta",
        "body": [
            "<page-meta>$1</page-meta>$0"
        ],
        "description": "page-meta element"
    }
}